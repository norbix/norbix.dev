<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>norbix.dev - The log of my journey through code &amp; software systems architecture</title><link>https://norbix.dev/</link><description>Recent content on norbix.dev - The log of my journey through code &amp; software systems architecture</description><generator>Hugo -- 0.145.0</generator><language>en-us</language><lastBuildDate>Sat, 19 Apr 2025 15:53:01 +0200</lastBuildDate><atom:link href="https://norbix.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>DevOps Deployment</title><link>https://norbix.dev/posts/devops-deployment/</link><pubDate>Sat, 19 Apr 2025 15:53:01 +0200</pubDate><guid>https://norbix.dev/posts/devops-deployment/</guid><description>A comprehensive guide to deploying a 3-tier application using Docker, Kubernetes, and Helm.</description></item><item><title>Concurrency in Go</title><link>https://norbix.dev/posts/concurrency-in-go/</link><pubDate>Sat, 19 Apr 2025 15:52:47 +0200</pubDate><guid>https://norbix.dev/posts/concurrency-in-go/</guid><description>A deep dive into concurrency in Go, covering goroutines, channels, and real-world patterns.</description></item><item><title>Graph Theory Algorithms 4 Competitive Programming</title><link>https://norbix.dev/posts/graph-theory-algorithms-4-competitive-programming/</link><pubDate>Sat, 19 Apr 2025 15:34:33 +0200</pubDate><guid>https://norbix.dev/posts/graph-theory-algorithms-4-competitive-programming/</guid><description>A comprehensive guide to graph theory algorithms in Go, covering essential concepts, implementations, and best practices for competitive programming.</description></item><item><title>DSA- Algorithms and Data Structures</title><link>https://norbix.dev/posts/algorithms-and-data-structures/</link><pubDate>Sat, 19 Apr 2025 15:06:25 +0200</pubDate><guid>https://norbix.dev/posts/algorithms-and-data-structures/</guid><description>A deep dive into Data Structures and Algorithms (DSA) using Go, covering essential concepts, implementations, and best practices.</description></item><item><title>Diagrams: Mermaid Syntax Highlights</title><link>https://norbix.dev/posts/diagrams/</link><pubDate>Tue, 15 Apr 2025 16:11:36 +0200</pubDate><guid>https://norbix.dev/posts/diagrams/</guid><description>A quick reference guide to using Mermaid syntax for creating various types of diagrams, including flowcharts, graphs, and more.</description></item><item><title>Design Patterns in Go: Practical Examples</title><link>https://norbix.dev/posts/design-patterns/</link><pubDate>Tue, 15 Apr 2025 12:43:02 +0200</pubDate><guid>https://norbix.dev/posts/design-patterns/</guid><description>Explore creational, structural, and behavioral design patterns in Go with clear explanations and code snippets.</description></item><item><title>Breaking the Chain: Dependency Inversion, Interfaces, and Testable Go Code</title><link>https://norbix.dev/posts/dependency-inversion-principle/</link><pubDate>Mon, 14 Apr 2025 18:00:00 +0200</pubDate><guid>https://norbix.dev/posts/dependency-inversion-principle/</guid><description>A deep dive into the Dependency Inversion Principle, its implementation with interfaces and dependency injection, and how it unlocks clean, testable Go code.</description></item><item><title>Keywords in Software Architecture</title><link>https://norbix.dev/posts/keywords/</link><pubDate>Sun, 13 Apr 2025 14:44:44 +0200</pubDate><guid>https://norbix.dev/posts/keywords/</guid><description>A visual exploration of the core keywords and concepts in modern software architecture.</description></item><item><title>Best Practices for Software Development in Go</title><link>https://norbix.dev/posts/best-practicies-4-software-development-in-go/</link><pubDate>Tue, 08 Apr 2025 19:10:10 +0200</pubDate><guid>https://norbix.dev/posts/best-practicies-4-software-development-in-go/</guid><description>A collection of real-world Go best practices from years of building backend systems, APIs, and cloud-native services.</description></item><item><title>Test</title><link>https://norbix.dev/docs/test/</link><pubDate>Tue, 08 Apr 2025 16:10:29 +0200</pubDate><guid>https://norbix.dev/docs/test/</guid><description>&lt;h1 id="this-is-a-test-page">This is a test page.&lt;/h1>
&lt;p>This is a test page for the Hugo blog. It is used to verify the setup and configuration of the Hugo site. The content here is not meant to be permanent and will be replaced with actual blog posts in the future.&lt;/p></description></item><item><title>About</title><link>https://norbix.dev/about/</link><pubDate>Sat, 05 Apr 2025 00:00:00 +0000</pubDate><guid>https://norbix.dev/about/</guid><description>&lt;p>Hi, I&amp;rsquo;m &lt;strong>Norbert Jakubczak&lt;/strong> â€” aka &lt;strong>Norbix&lt;/strong> ðŸ‘‹&lt;/p>
&lt;p>I&amp;rsquo;m a polyglot &lt;strong>Software Engineer&lt;/strong> with a strong focus on &lt;strong>Golang&lt;/strong> and &lt;strong>Python&lt;/strong>, working across the full stack â€” from backend and cloud infrastructure to frontend integration and developer tooling.&lt;/p>
&lt;p>I specialize in building &lt;strong>Internal Developer Platforms (IDPs)&lt;/strong> and architecting scalable &lt;strong>Software-as-a-Service (SaaS)&lt;/strong> systems using microservices and modern cloud-native technologies.&lt;/p>
&lt;p>Before stepping fully into tech, I was a &lt;strong>professional basketball player&lt;/strong> â€” a path that taught me discipline, team dynamics, and what it means to perform under pressure. That mindset still drives how I build software today.&lt;/p></description></item></channel></rss>