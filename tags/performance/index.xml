<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Performance on norbix.dev - The log of my journey through code &amp; software systems architecture</title><link>https://norbix.dev/tags/performance/</link><description>Recent content in Performance on norbix.dev - The log of my journey through code &amp; software systems architecture</description><generator>Hugo -- 0.145.0</generator><language>en-us</language><lastBuildDate>Wed, 23 Apr 2025 10:00:00 +0200</lastBuildDate><atom:link href="https://norbix.dev/tags/performance/index.xml" rel="self" type="application/rss+xml"/><item><title>Demystifying Big-O Notation in Software Engineering</title><link>https://norbix.dev/posts/big-o-notation/</link><pubDate>Wed, 23 Apr 2025 10:00:00 +0200</pubDate><guid>https://norbix.dev/posts/big-o-notation/</guid><description>Understand Big-O notation through real-world Go examples and discover how algorithmic complexity impacts code scalability, performance, and design choices.</description></item><item><title>Profiling Go Applications: CPU, Memory, and Concurrency Insights</title><link>https://norbix.dev/posts/profiling/</link><pubDate>Tue, 22 Apr 2025 19:00:00 +0200</pubDate><guid>https://norbix.dev/posts/profiling/</guid><description>Learn how to profile Go applications using pprof, trace, and runtime tools to uncover bottlenecks, memory leaks, and concurrency issues in production and development.</description></item></channel></rss>