<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Go on norbix.dev - The log of my journey through code &amp; software systems architecture</title><link>https://norbix.dev/tags/go/</link><description>Recent content in Go on norbix.dev - The log of my journey through code &amp; software systems architecture</description><generator>Hugo -- 0.145.0</generator><language>en-us</language><lastBuildDate>Sat, 19 Apr 2025 15:34:33 +0200</lastBuildDate><atom:link href="https://norbix.dev/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Graph Theory Algorithms 4 Competitive Programming</title><link>https://norbix.dev/posts/graph-theory-algorithms-4-competitive-programming/</link><pubDate>Sat, 19 Apr 2025 15:34:33 +0200</pubDate><guid>https://norbix.dev/posts/graph-theory-algorithms-4-competitive-programming/</guid><description>A comprehensive guide to graph theory algorithms in Go, covering essential concepts, implementations, and best practices for competitive programming.</description></item><item><title>DSA- Algorithms and Data Structures</title><link>https://norbix.dev/posts/algorithms-and-data-structures/</link><pubDate>Sat, 19 Apr 2025 15:06:25 +0200</pubDate><guid>https://norbix.dev/posts/algorithms-and-data-structures/</guid><description>A deep dive into Data Structures and Algorithms (DSA) using Go, covering essential concepts, implementations, and best practices.</description></item><item><title>Design Patterns in Go: Practical Examples</title><link>https://norbix.dev/posts/design-patterns/</link><pubDate>Tue, 15 Apr 2025 12:43:02 +0200</pubDate><guid>https://norbix.dev/posts/design-patterns/</guid><description>Explore creational, structural, and behavioral design patterns in Go with clear explanations and code snippets.</description></item><item><title>Breaking the Chain: Dependency Inversion, Interfaces, and Testable Go Code</title><link>https://norbix.dev/posts/dependency-inversion-principle/</link><pubDate>Mon, 14 Apr 2025 18:00:00 +0200</pubDate><guid>https://norbix.dev/posts/dependency-inversion-principle/</guid><description>A deep dive into the Dependency Inversion Principle, its implementation with interfaces and dependency injection, and how it unlocks clean, testable Go code.</description></item><item><title>Best Practices for Software Development in Go</title><link>https://norbix.dev/posts/best-practicies-4-software-development-in-go/</link><pubDate>Tue, 08 Apr 2025 19:10:10 +0200</pubDate><guid>https://norbix.dev/posts/best-practicies-4-software-development-in-go/</guid><description>A collection of real-world Go best practices from years of building backend systems, APIs, and cloud-native services.</description></item></channel></rss>